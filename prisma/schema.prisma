generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model UserEvent {
  id                  Int        @id @default(autoincrement())
  userId              String
  eventId             String
  attendanceStatus    String 
  rating              String?
  review              String?
  event               Event      @relation(fields: [eventId], references: [id])
  user                User       @relation(fields: [userId], references: [id])
}

model Event {
  id                  String           @id @default(cuid())
  name                String
  localDateTime       DateTime
  location            String
  maxAttendance       Int
  users               UserEvent[]
}

// Prisma/NextAuth required

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  joinDate  DateTime      @default(now())
  events    UserEvent[]
  location  String?
  dob       DateTime?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
